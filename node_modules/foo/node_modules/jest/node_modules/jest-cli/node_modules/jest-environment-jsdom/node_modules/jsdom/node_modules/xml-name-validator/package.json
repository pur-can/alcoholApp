{
  "name": "xml-name-validator",
  "description": "Validates whether a string matches the production for an XML name or qualified name",
  "keywords": [
    "xml",
    "name",
    "qname"
  ],
  "version": "3.0.0",
  "author": {
    "name": "Domenic Denicola",
    "email": "d@domenic.me",
    "url": "https://domenic.me/"
  },
  "license": "Apache-2.0",
  "repository": {
    "type": "git",
    "url": "jsdom/xml-name-validator"
  },
  "main": "lib/xml-name-validator.js",
  "files": [
    "lib/"
  ],
  "scripts": {
    "prepublish": "node scripts/generate-grammar.js < lib/grammar.pegjs > lib/generated-parser.js",
    "pretest": "npm run prepublish",
    "test": "mocha",
    "lint": "eslint ."
  },
  "devDependencies": {
    "eslint": "^2.9.0",
    "mocha": "^2.4.5",
    "waka": "0.1.2"
  },
  "readme": "# Validate XML Names and Qualified Names\n\nThis package simply tells you whether or not a string matches the [`Name`](http://www.w3.org/TR/xml/#NT-Name) or [`QName`](http://www.w3.org/TR/xml-names/#NT-QName) productions in the XML Namespaces specification. We use it for implementing the [validate](https://dom.spec.whatwg.org/#validate) algorithm in jsdom, but you can use it for whatever you want.\n\n## Usage\n\nThis package's main module's default export takes a string and will return an object of the form `{ success, error }`, where `success` is a boolean and if it is `false`, then `error` is a string containing some hint as to where the match went wrong.\n\n```js\n\"use strict\":\nvar xnv = require(\"xml-name-validator\");\nvar assert = require(\"assert\");\n\n// Will return { success: true, error: undefined }\nxnv.name(\"x\");\nxnv.name(\":\");\nxnv.name(\"a:0\");\nxnv.name(\"a:b:c\");\n\n// Will return { success: false, error: <an explanatory string> }\nxnv.name(\"\\\\\");\nxnv.name(\"'\");\nxnv.name(\"0\");\nxnv.name(\"a!\");\n\n// Will return { success: true, error: undefined }\nxnv.qname(\"x\");\nxnv.qname(\"a0\");\nxnv.qname(\"a:b\");\n\n// Will return { success: false, error: <an explanatory string> }\nxnv.qname(\":a\");\nxnv.qname(\":b\");\nxnv.qname(\"a:b:c\");\nxnv.qname(\"a:0\");\n```\n",
  "readmeFilename": "README.md",
  "_id": "xml-name-validator@3.0.0",
  "dist": {
    "shasum": "f03a2ebf31382b27a1d73b77ed7511ccf959690a"
  },
  "_from": "xml-name-validator@^3.0.0",
  "_resolved": "https://registry.npmjs.org/xml-name-validator/-/xml-name-validator-3.0.0.tgz"
}
