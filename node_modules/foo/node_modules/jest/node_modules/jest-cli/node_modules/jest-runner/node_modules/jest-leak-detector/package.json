{
  "name": "jest-leak-detector",
  "version": "21.3.0-beta.15",
  "repository": {
    "type": "git",
    "url": "https://github.com/facebook/jest.git"
  },
  "license": "MIT",
  "main": "build/index.js",
  "dependencies": {
    "pretty-format": "21.3.0-beta.15",
    "weak": "^1.0.1"
  },
  "optionalDependencies": {
    "weak": "^1.0.1"
  },
  "readme": "# jest-leak-detector\n\nModule for verifying whether an object has been garbage collected or not.\n\nInternally creates a weak reference to the object, and forces garbage collection\nto happen. If the reference is gone, it meant no one else was pointing to the\nobject.\n\n## Example\n\n```javascript\nlet reference = {};\n\nconst detector = new LeakDetector(reference);\n\n// Reference is held in memory.\nconsole.log(detector.isLeaked()); // true\n\n// We destroy the only reference to the object.\nreference = null;\n\n// Reference is gone.\nconsole.log(detector.isLeaked()); // false\n```\n",
  "readmeFilename": "README.md",
  "description": "Module for verifying whether an object has been garbage collected or not.",
  "bugs": {
    "url": "https://github.com/facebook/jest/issues"
  },
  "_id": "jest-leak-detector@21.3.0-beta.15",
  "dist": {
    "shasum": "db5f5d185f0dc403dded0547144090f4be737362"
  },
  "_from": "jest-leak-detector@21.3.0-beta.15",
  "_resolved": "https://registry.npmjs.org/jest-leak-detector/-/jest-leak-detector-21.3.0-beta.15.tgz"
}
